#! /usr/bin/env bash
set -e
set -u
set -o pipefail
# if running in ci, print more message in console
if [[ -n "$CI_ENV" ]]; then
	echo "Running in debug mode"
	set -x
fi
install_target_profile_deps() {
	echo "install build deps"
	if [[ $SKIP_APT_GET_INSTALL == "true" ]]; then
		echo 'env SKIP_APT_GET_INSTALL == true, skip install required package'
	else
		sudo -E apt update
		sudo -E apt -y install wget kpartx zstd tar
	fi
}

preinstalled_packages="
	bash
	openrc
	podman
	e2fsprogs
	busybox-mdev-openrc
	dmesg
	procps
	findmnt
	blkid
	mount
 	zstd
  	tar
	"
echo "workspace: ${workspace:?}"
echo "output: ${output:?}"

rootfs_url="https://dl-cdn.alpinelinux.org/alpine/v3.20/releases/x86_64/alpine-minirootfs-3.20.2-x86_64.tar.gz"
rootfs_file="$output/$(basename "$rootfs_url")"
rootfs_dir="$output/rootfs_amd64"
profile_name="$(basename "${target_profile:?}")"
# artifactory_file is the rootfs-amd64.zst used to import into wsl2
artifactory_file="$output/rootfs-amd64" # without zstd
artifactory_zstd="$artifactory_file.zst"
if [[ $BUILD_TYPE == cross ]]; then
	proot_args+="--qemu=$output/qemu_bins/static_qemu/bin/qemu-aarch64"
fi
proot_args+=("-r" "$rootfs_dir")
proot_args+=("-b" "/dev:/dev")
proot_args+=("-b" "/sys:/sys")
proot_args+=("-b" "/proc:/proc")
proot_args+=("-b" "/etc/resolv.conf:/etc/resolv.conf")
proot_args+=("-w" "/root")

pack_rootfs() {
	echo "pack rootfs"
	cd "$rootfs_dir"
	tar -cvf "$artifactory_file" . >/dev/null
	cd "$output"
	zstd --stdout --force -16 "$artifactory_file"  > "$artifactory_zstd"
	sha256sum "$artifactory_zstd" | tee "$artifactory_zstd.sha256sum"
}

bootstrap_alpine() {
	wget "$rootfs_url" --output-document="$rootfs_file" --output-file="$output/wget_alpine_rootfs.log"
	sudo rm -rf "$rootfs_dir"

	echo "unpack rootfs"
	sudo mkdir -p "$rootfs_dir"
	tar -xvf "$rootfs_file" -C "$rootfs_dir" >/dev/null

	echo "install pkgs into rootfs"
	pkgs=$(echo "$preinstalled_packages" | xargs)
	sudo -E proot "${proot_args[@]}" -0 /bin/su -c "apk update && apk add $pkgs"
}

copy_layer() {
	layer_dir="$workspace/layers/$profile_name"
	echo "copy $layer_dir layers files"
	sudo cp -rf "$layer_dir/"* "$rootfs_dir"
	sync
}

echo "=== $profile_name ==="

bootstrap_alpine
copy_layer
pack_rootfs
